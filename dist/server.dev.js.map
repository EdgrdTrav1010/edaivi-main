{"version":3,"sources":["server.js"],"names":["express","require","Server","createServer","mongoose","cors","path","app","httpServer","io","origin","process","env","NODE_ENV","FRONTEND_URL","methods","credentials","PORT","MONGODB_URI","User","AudioProject","VideoProject","Avatar3D","Scene3D","StreamSession","AIModel","console","log","mockUsers","_id","email","displayName","role","isVerified","avatar","subscription","plan","usage","aiCredits","comparePassword","findOne","query","find","user","findById","id","prototype","updateAiCredits","amount","save","mockAIModels","name","description","type","category","isActive","creditsPerUse","costPerUse","restrictions","minUserLevel","updateUsageStats","filter","model","undefined","isFeatured","mockAudioProjects","title","owner","isPublic","tracks","duration","bpm","addTrack","track","push","removeTrack","trackId","t","updateTrack","trackData","index","findIndex","format","quality","url","fileSize","createdAt","Date","project","authRoutes","audioRoutes","aiRoutes","use","json","limit","urlencoded","extended","join","__dirname","get","req","res","sendFile","message","version","status","timestamp","toISOString","endpoints","uptime","memory","memoryUsage","environment","mongodb","connection","readyState","on","socket","roomId","userId","to","emit","leave","update","streamId","event","error","originalUrl","method","availableRoutes","err","next","stack","listen","repeat","toLocaleString","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\n// const rateLimit = require('express-rate-limit'); // Commented out temporarily\n// const tf = require('@tensorflow/tfjs-node'); // Comment this out temporarily\nconst { Server } = require('socket.io');\nconst { createServer } = require('http');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst path = require('path');\n\n// Initialize Express app\nconst app = express();\nconst httpServer = createServer(app);\nconst io = new Server(httpServer, {\n  cors: {\n    origin: process.env.NODE_ENV === 'production' \n      ? process.env.FRONTEND_URL \n      : ['http://localhost:3000', 'http://localhost:3001'],\n    methods: ['GET', 'POST'],\n    credentials: true\n  }\n});\n\n// Configuration\nconst PORT = process.env.PORT || 8082;\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/edaivi';\n\n// Import models\nconst User = require('./models/User');\nconst AudioProject = require('./models/AudioProject');\nconst VideoProject = require('./models/VideoProject');\nconst Avatar3D = require('./models/Avatar3D');\nconst Scene3D = require('./models/Scene3D');\nconst StreamSession = require('./models/StreamSession');\nconst AIModel = require('./models/AIModel');\n\n// Connect to MongoDB - commented out since MongoDB is not installed\n// mongoose.connect(MONGODB_URI, {\n//   useNewUrlParser: true,\n//   useUnifiedTopology: true\n// })\n// .then(() => {\n//   console.log('📦 MongoDB connected successfully');\n// })\n// .catch(err => {\n//   console.error('❌ MongoDB connection error:', err);\n//   console.log('📦 Continuing without MongoDB for testing');\n// });\nconsole.log('📦 MongoDB connection skipped - using mock data for testing');\n\n// Setup mock data and handlers for testing without MongoDB\nconst mockUsers = [\n  {\n    _id: 'user1',\n    email: 'admin@edaivi.com',\n    displayName: 'Admin User',\n    role: 'admin',\n    isVerified: true,\n    avatar: 'default-avatar.png',\n    subscription: { plan: 'enterprise' },\n    usage: { aiCredits: 1000 },\n    comparePassword: async () => true\n  },\n  {\n    _id: 'user2',\n    email: 'edgrd.88@gmail.com',\n    displayName: 'Developer',\n    role: 'admin',\n    isVerified: true,\n    avatar: 'default-avatar.png',\n    subscription: { plan: 'enterprise' },\n    usage: { aiCredits: 1000 },\n    comparePassword: async () => true\n  }\n];\n\n// Mock find methods for User model\nUser.findOne = async (query) => {\n  if (query.email) {\n    return mockUsers.find(user => user.email === query.email);\n  }\n  return null;\n};\n\nUser.findById = async (id) => {\n  return mockUsers.find(user => user._id === id);\n};\n\n// Add mock methods to User prototype\nUser.prototype.updateAiCredits = async function(amount) {\n  this.usage.aiCredits += amount;\n  return this;\n};\n\nUser.prototype.save = async function() {\n  return this;\n};\n\n// Mock AI models\nconst mockAIModels = [\n  {\n    _id: 'model1',\n    name: 'text-gen-basic',\n    displayName: 'TextGen Basic',\n    description: 'Базовая модель генерации текста',\n    type: 'text-generation',\n    category: 'text',\n    isActive: true,\n    creditsPerUse: 1,\n    costPerUse: 0.01,\n    restrictions: { minUserLevel: 'free' },\n    updateUsageStats: async () => {}\n  },\n  {\n    _id: 'model2',\n    name: 'image-gen-basic',\n    displayName: 'ImageGen Basic',\n    description: 'Базовая модель генерации изображений',\n    type: 'image-generation',\n    category: 'image',\n    isActive: true,\n    creditsPerUse: 2,\n    costPerUse: 0.02,\n    restrictions: { minUserLevel: 'free' },\n    updateUsageStats: async () => {}\n  },\n  {\n    _id: 'model3',\n    name: 'tts-basic',\n    displayName: 'TTS Basic',\n    description: 'Базовая модель преобразования текста в речь',\n    type: 'text-to-speech',\n    category: 'audio',\n    isActive: true,\n    creditsPerUse: 1,\n    costPerUse: 0.01,\n    restrictions: { minUserLevel: 'free' },\n    updateUsageStats: async () => {}\n  }\n];\n\n// Mock methods for AIModel\nAIModel.find = async (query) => {\n  return mockAIModels.filter(model => {\n    if (query.isActive !== undefined && model.isActive !== query.isActive) return false;\n    if (query.category && model.category !== query.category) return false;\n    if (query.type && model.type !== query.type) return false;\n    if (query.isFeatured && !model.isFeatured) return false;\n    return true;\n  });\n};\n\nAIModel.findById = async (id) => {\n  return mockAIModels.find(model => model._id === id);\n};\n\n// Mock audio projects\nconst mockAudioProjects = [\n  {\n    _id: 'project1',\n    title: 'Демо проект 1',\n    description: 'Тестовый аудио проект',\n    owner: 'user1',\n    isPublic: true,\n    tracks: [],\n    duration: 0,\n    bpm: 120,\n    addTrack: async function(track) {\n      this.tracks.push(track);\n      return this;\n    },\n    removeTrack: async function(trackId) {\n      this.tracks = this.tracks.filter(t => t._id !== trackId);\n      return this;\n    },\n    updateTrack: async function(trackId, trackData) {\n      const index = this.tracks.findIndex(t => t._id === trackId);\n      if (index !== -1) {\n        this.tracks[index] = { ...this.tracks[index], ...trackData };\n      }\n      return this;\n    },\n    export: async function(format, quality) {\n      return {\n        url: `https://example.com/export_${this._id}.${format || 'mp3'}`,\n        format: format || 'mp3',\n        quality: quality || 'high',\n        duration: this.duration,\n        fileSize: 1000000,\n        createdAt: new Date()\n      };\n    },\n    save: async function() {\n      return this;\n    }\n  }\n];\n\n// Mock methods for AudioProject\nAudioProject.find = async (query) => {\n  return mockAudioProjects;\n};\n\nAudioProject.findById = async (id) => {\n  return mockAudioProjects.find(project => project._id === id);\n};\n\n// Import routes\nconst authRoutes = require('./routes/auth');\nconst audioRoutes = require('./routes/audio');\nconst aiRoutes = require('./routes/ai');\n// Uncomment these when the routes are implemented\n// const videoRoutes = require('./routes/video');\n// const avatarRoutes = require('./routes/avatar');\n// const sceneRoutes = require('./routes/scene');\n// const streamRoutes = require('./routes/stream');\n\n// Security middleware\n// app.use(helmet());\napp.use(cors({\n  origin: process.env.NODE_ENV === 'production' \n    ? process.env.FRONTEND_URL \n    : ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true\n}));\n\n// Rate limiting - commented out temporarily\n// const apiLimiter = rateLimit({\n//   windowMs: 15 * 60 * 1000, // 15 minutes\n//   max: 100, // limit each IP to 100 requests per windowMs\n//   standardHeaders: true,\n//   legacyHeaders: false,\n//   message: {\n//     status: 429,\n//     error: 'Too many requests, please try again later.'\n//   }\n// });\n\n// Apply rate limiting to API routes\n// app.use('/api/', apiLimiter);\n\n// Body parsing middleware\napp.use(express.json({ limit: '50mb' }));\napp.use(express.urlencoded({ extended: true, limit: '50mb' }));\n\n// Static files\napp.use(express.static(path.join(__dirname, 'client')));\n\n// API Routes\napp.use('/api/auth', authRoutes);\napp.use('/api/audio', audioRoutes);\napp.use('/api/ai', aiRoutes);\n// Uncomment these when the routes are implemented\n// app.use('/api/video', videoRoutes);\n// app.use('/api/avatar', avatarRoutes);\n// app.use('/api/scene', sceneRoutes);\n// app.use('/api/stream', streamRoutes);\n\n// Base route\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'client', 'index.html'));\n});\n\n// API info route\napp.get('/api', (req, res) => {\n  res.json({ \n    message: 'EdAiVi Studio API запущен!',\n    version: '1.0.0',\n    status: 'working',\n    timestamp: new Date().toISOString(),\n    endpoints: [\n      'GET /',\n      'GET /api/status',\n      'POST /api/auth/login',\n      'POST /api/auth/register',\n      'GET /api/auth/profile',\n      'GET /api/audio',\n      'GET /api/video',\n      'GET /api/avatar',\n      'GET /api/scene',\n      'GET /api/stream',\n      'GET /api/ai'\n    ]\n  });\n});\n\n// Server status\napp.get('/api/status', (req, res) => {\n  res.json({\n    status: 'online',\n    uptime: process.uptime(),\n    memory: process.memoryUsage(),\n    environment: process.env.NODE_ENV || 'development',\n    mongodb: mongoose.connection.readyState === 1 ? 'connected' : 'disconnected',\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Socket.IO setup\nio.on('connection', (socket) => {\n  console.log(`🔌 Socket connected: ${socket.id}`);\n  \n  // Join room (for project collaboration, streaming, etc.)\n  socket.on('join-room', (roomId, userId) => {\n    socket.join(roomId);\n    socket.to(roomId).emit('user-connected', userId);\n    console.log(`👤 User ${userId} joined room ${roomId}`);\n  });\n  \n  // Leave room\n  socket.on('leave-room', (roomId, userId) => {\n    socket.leave(roomId);\n    socket.to(roomId).emit('user-disconnected', userId);\n    console.log(`👤 User ${userId} left room ${roomId}`);\n  });\n  \n  // Chat message\n  socket.on('chat-message', (roomId, message) => {\n    socket.to(roomId).emit('chat-message', message);\n  });\n  \n  // Project update\n  socket.on('project-update', (roomId, update) => {\n    socket.to(roomId).emit('project-update', update);\n  });\n  \n  // Stream events\n  socket.on('stream-event', (streamId, event) => {\n    socket.to(streamId).emit('stream-event', event);\n  });\n  \n  // Disconnect\n  socket.on('disconnect', () => {\n    console.log(`🔌 Socket disconnected: ${socket.id}`);\n  });\n});\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({ \n    error: 'Маршрут не найден',\n    path: req.originalUrl,\n    method: req.method,\n    timestamp: new Date().toISOString(),\n    availableRoutes: [\n      'GET /',\n      'GET /api/status',\n      'POST /api/auth/login',\n      'POST /api/auth/register',\n      'GET /api/auth/profile',\n      'GET /api/audio',\n      'GET /api/video',\n      'GET /api/avatar',\n      'GET /api/scene',\n      'GET /api/stream',\n      'GET /api/ai'\n    ]\n  });\n});\n\n// Global error handler\napp.use((err, req, res, next) => {\n  console.error('❌ Ошибка сервера:', err.stack);\n  res.status(500).json({ \n    error: 'Внутренняя ошибка сервера',\n    message: err.message,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Start server\nhttpServer.listen(PORT, () => {\n  console.log('='.repeat(50));\n  console.log(`🚀 Сервер EdAiVi Studio запущен!`);\n  console.log(`📡 Порт: ${PORT}`);\n  console.log(`🌐 URL: http://localhost:${PORT}`);\n  console.log(`⏰ Время запуска: ${new Date().toLocaleString()}`);\n  console.log(`🔌 Socket.IO активен`);\n  console.log(`🌍 Окружение: ${process.env.NODE_ENV || 'development'}`);\n  console.log('='.repeat(50));\n  console.log('📋 Доступные маршруты:');\n  console.log(`   GET  http://localhost:${PORT}/`);\n  console.log(`   GET  http://localhost:${PORT}/api/status`);\n  console.log(`   POST http://localhost:${PORT}/api/auth/login`);\n  console.log(`   POST http://localhost:${PORT}/api/auth/register`);\n  console.log(`   GET  http://localhost:${PORT}/api/auth/profile`);\n  console.log(`   GET  http://localhost:${PORT}/api/audio`);\n  console.log(`   GET  http://localhost:${PORT}/api/video`);\n  console.log(`   GET  http://localhost:${PORT}/api/avatar`);\n  console.log(`   GET  http://localhost:${PORT}/api/scene`);\n  console.log(`   GET  http://localhost:${PORT}/api/stream`);\n  console.log(`   GET  http://localhost:${PORT}/api/ai`);\n  console.log('='.repeat(50));\n});\n\nmodule.exports = app;\n"],"file":"server.dev.js"}